apiVersion: v1
kind: Service
metadata:
  name: #{APP}#
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: #{APP}#
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: #{APP}#
spec:
  replicas: #{REPLICAS}#
  selector:
    matchLabels:
      app: #{APP}#
  template:
    metadata:
      labels:
        app: #{APP}#
        version: "#{VERSION}#"
    spec:
      containers:
        - name: #{APP}#
          image: #{CONTAINER_IMAGE}#
          ports:
            - containerPort: 8080
          env:
            - name: MESSAGE
              value: Welcome to a POD!
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: #{APP}#-cert
spec:
  secretName: #{APP}#-cert
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
    - "#{APP}#.#{DOMAIN}#"
  acme:
    config:
      - dns01:
          provider: azure
        domains:
          - "#{APP}#.#{DOMAIN}#"
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: #{APP}#-ingress
  annotations:
    kubernetes.io/ingress.class: "citrix-ingress"
spec:
  tls:
    - hosts:
        -  #{APP}#.#{DOMAIN}#
      secretName: #{APP}#-cert
  rules:
    - host: #{APP}#.#{DOMAIN}#
      http:
        paths:
          - backend:
              serviceName: #{APP}#
              servicePort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: #{APP}#-ingress-http
  annotations:
    kubernetes.io/ingress.class: "citrix-ingress"
spec:
  rules:
    - host: #{APP}#.#{DOMAIN}#
      http:
        paths:
          - backend:
              serviceName: #{APP}#
              servicePort: 8080
---
apiVersion: citrix.com/v1
kind: rewritepolicy
metadata:
  name: httpsredirect
spec:
  responder-policies:
    - servicenames:
        -  #{APP}#
      responder-policy:
        redirect:
          url: '"https://" + HTTP.REQ.HEADER("Host").HTTP_HEADER_SAFE + HTTP.REQ.URL.PATH_AND_QUERY.HTTP_URL_SAFE'
        respond-criteria: "CLIENT.SSL.IS_SSL.NOT"
        comment: "Redirect http to https"
